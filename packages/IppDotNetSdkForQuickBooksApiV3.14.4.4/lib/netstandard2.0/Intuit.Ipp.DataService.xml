<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Intuit.Ipp.DataService</name>
    </assembly>
    <members>
        <member name="T:Intuit.Ipp.DataService.AsyncService">
            <summary>
            Intuit Partner Platform Services for QBO.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.DataService.AsyncService.serviceContext">
            <summary>
            The Service context object.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.DataService.AsyncService.requestedEntity">
            <summary>
            The Requested Entity.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.#ctor(Intuit.Ipp.Core.ServiceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.DataService.AsyncService"/> class.
            </summary>
            <param name="serviceContext">IPP Service Context</param>
        </member>
        <member name="E:Intuit.Ipp.DataService.AsyncService.OnFindAllAsynCompleted">
            <summary>
            call back event for find all
            </summary>
        </member>
        <member name="E:Intuit.Ipp.DataService.AsyncService.OnAddAsyncCompleted">
            <summary>
            Call back event for add.
            </summary>
        </member>
        <member name="E:Intuit.Ipp.DataService.AsyncService.OnUpdateAsynCompleted">
            <summary>
            call back event for update.
            </summary>
        </member>
        <member name="E:Intuit.Ipp.DataService.AsyncService.OnUpdateAccAsynCompleted">
            <summary>
            call back event for update account.
            </summary>
        </member>
        <member name="E:Intuit.Ipp.DataService.AsyncService.OnDoNotUpdateAccAsyncCompleted">
            <summary>
            call back event for update account.
            </summary>
        </member>
        <member name="E:Intuit.Ipp.DataService.AsyncService.OnDeleteAsynCompleted">
            <summary>
            Call Back event for Delete.
            </summary>
        </member>
        <member name="E:Intuit.Ipp.DataService.AsyncService.OnVoidAsynCompleted">
            <summary>
            Call Back event for Void.
            </summary>
        </member>
        <member name="E:Intuit.Ipp.DataService.AsyncService.OnFindByIdAsynCompleted">
            <summary>
            Call back event for FindById method.
            </summary>
        </member>
        <member name="E:Intuit.Ipp.DataService.AsyncService.OnFindByParentIdAsyncCompleted">
            <summary>
            Call back event for FindByParentId method.
            </summary>
        </member>
        <member name="E:Intuit.Ipp.DataService.AsyncService.OnFindByLevelAsyncCompleted">
            <summary>
            Call back event for FindByLevel method.
            </summary>
        </member>
        <member name="E:Intuit.Ipp.DataService.AsyncService.OnGetPdfAsynCompleted">
            <summary>
            Call back event for GetPdf method.
            </summary>
        </member>
        <member name="E:Intuit.Ipp.DataService.AsyncService.OnSendEmailAsynCompleted">
            <summary>
            Call back event for SendEmail method.
            </summary>
        </member>
        <member name="E:Intuit.Ipp.DataService.AsyncService.OnCDCAsynCompleted">
            <summary>
            Call back event for CDC method.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.FindAllAsync``1(``0,System.Int32,System.Int32)">
            <summary>
            Gets a list of all entities  of type T under the specified realm (asynchronously). The realm must be set in the context.
            </summary>
            <typeparam name="T">Generic Type</typeparam>
            <param name="entity">The entity for which the data is required.</param>
            <param name="startPosition">The start position.</param>
            <param name="maxResults">The max results.</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.FindAllAsync``1(``0)">
            <summary>
            Gets a list of all entities under the specified realm (asynchronously). The realm must be set in the context.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.AddAsync``1(``0)">
            <summary>
            Adds an entity (asynchronously) under the specified realm in an asynchronous manner. The realm must be set in the context.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Entity to Add</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.UpdateAsync``1(``0)">
            <summary>
            Updates(asynchronously) an entity under the specified realm. The realm must be set in the context.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Entity to Update</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.UpdateAccAsync``1(``0)">
            <summary>
            Updates(asynchronously) an entity under the specified realm. The realm must be set in the context.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Entity to Update</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.DoNotUpdateAccAsync``1(``0)">
            <summary>
            do not Updates(asynchronously) an entity under the specified realm. The realm must be set in the context.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Entity to Update</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.DeleteAsync``1(``0)">
            <summary>
            Deletes an entity (asynchronously) under the specified realm. The realm must be set in the context
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Entity to Delete</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.VoidAsync``1(``0)">
            <summary>
            Deletes an entity (asynchronously) under the specified realm. The realm must be set in the context
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Entity to Delete</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.GetPdfAsync``1(``0)">
            <summary>
            Calls the asynchronous method to get the required entity as pdf.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity"> Entity type to get as pdf</param>    
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.GetPdfCompleted(System.Object,Intuit.Ipp.Core.AsyncCallCompletedEventArgs)">
            <summary>
            GetPdf call back method.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The <see cref="T:Intuit.Ipp.Core.AsyncCallCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.SendEmailAsync``1(``0,System.String)">
            <summary>
            Calls the asynchronous method to email the required entity.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity"> Entity type to email</param>    
            <param name="sendToEmail">Email address to send email to.</param>    
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.SendEmailCompleted(System.Object,Intuit.Ipp.Core.AsyncCallCompletedEventArgs)">
            <summary>
            SendEmail call back method.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The <see cref="T:Intuit.Ipp.Core.AsyncCallCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.FindByIdAsync``1(``0)">
            <summary>
            Calls the asynchronous method to get the required entity.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity"> Entity type to Find</param>    
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.FindByIdCompleted(System.Object,Intuit.Ipp.Core.AsyncCallCompletedEventArgs)">
            <summary>
            FindByid call back method.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The <see cref="T:Intuit.Ipp.Core.AsyncCallCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.FindByLevelAsync``1(``0)">
            <summary>
            Calls the asynchronous method to get the required entities specified by Level.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.FindByLevelAsyncCompleted``1(System.Object,Intuit.Ipp.Core.AsyncCallCompletedEventArgs)">
            <summary>
            FindByLevelAsync complete call back
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sender"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.FindByParentIdAsync``1(``0)">
            <summary>
            Calls the asynchronous method to get the required entities specified by ParentId.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.FindByParentIdAsyncCompleted``1(System.Object,Intuit.Ipp.Core.AsyncCallCompletedEventArgs)">
            <summary>
            FindByParentIdAsync completed callback
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sender"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.CDCAsync(System.Collections.Generic.List{Intuit.Ipp.Data.IEntity},System.DateTime)">
            <summary>
            Calls the asynchronous method to get the required CDC.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.CreateIdsException(System.Exception)">
            <summary>
            Creates the ids exception.
            </summary>
            <param name="applicationException">The application exception.</param>
            <returns>Returns the IdsException.</returns>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.FindAllAsyncCompleted``1(System.Object,Intuit.Ipp.Core.AsyncCallCompletedEventArgs)">
            <summary>
            FindAll a sync completed call back.
            </summary>
            <typeparam name="T">The Entity type.</typeparam>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The <see cref="T:Intuit.Ipp.Core.AsyncCallCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.AddAsyncompleted(System.Object,Intuit.Ipp.Core.AsyncCallCompletedEventArgs)">
            <summary>
            call back method for asynchronously Adding entity
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The <see cref="T:Intuit.Ipp.Core.AsyncCallCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.UpdateAsyncCompleted(System.Object,Intuit.Ipp.Core.AsyncCallCompletedEventArgs)">
            <summary>
            Callback event
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The <see cref="T:Intuit.Ipp.Core.AsyncCallCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.UpdateAccAsyncCompleted(System.Object,Intuit.Ipp.Core.AsyncCallCompletedEventArgs)">
            <summary>
            Callback event
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The <see cref="T:Intuit.Ipp.Core.AsyncCallCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.DeleteAsyncCompleted(System.Object,Intuit.Ipp.Core.AsyncCallCompletedEventArgs)">
            <summary>
            Delete operation call back method.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The <see cref="T:Intuit.Ipp.Core.AsyncCallCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.VoidAsyncCompleted(System.Object,Intuit.Ipp.Core.AsyncCallCompletedEventArgs)">
            <summary>
            Delete operation call back method.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The <see cref="T:Intuit.Ipp.Core.AsyncCallCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.CDCAsyncCompleted(System.Object,Intuit.Ipp.Core.AsyncCallCompletedEventArgs)">
            <summary>
            CDC Async completed call back.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The <see cref="T:Intuit.Ipp.Core.AsyncCallCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.AsyncService.PrepareHttpRequestAsync(System.String,Intuit.Ipp.Core.Rest.AsyncRestHandler)">
            <summary>
            Prepares Async Http Request
            </summary>
            <param name="uri">uri</param>
            <param name="asyncRestHandler">asyncRestHandler</param>
        </member>
        <member name="T:Intuit.Ipp.DataService.Batch">
            <summary>
            This class contains code for Batch Processing.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.DataService.Batch.batchRequests">
            <summary>
            batch requests
            </summary>
        </member>
        <member name="F:Intuit.Ipp.DataService.Batch.batchResponses">
            <summary>
            batch responses
            </summary>
        </member>
        <member name="F:Intuit.Ipp.DataService.Batch.intuitBatchItemResponses">
            <summary>
            inuit batch item responses list.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.DataService.Batch.serviceContext">
            <summary>
            service context object.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.DataService.Batch.restHandler">
            <summary>
            rest handler object.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.DataService.Batch.responseSerializer">
            <summary>
            serializer to be used. 
            </summary>
        </member>
        <member name="M:Intuit.Ipp.DataService.Batch.#ctor(Intuit.Ipp.Core.ServiceContext,Intuit.Ipp.Core.Rest.IRestHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.DataService.Batch"/> class.
            </summary>
            <param name="serviceContext">The service context.</param>
            <param name="restHandler">The rest handler.</param>
        </member>
        <member name="P:Intuit.Ipp.DataService.Batch.OnBatchExecuteAsyncCompleted">
            <summary>
            Gets or sets the call back event for ExecuteAsync method in asynchronous call.
            </summary>
            <value>
            on batch execute async completed.
            </value>
        </member>
        <member name="P:Intuit.Ipp.DataService.Batch.Count">
            <summary>
            Gets the count.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.DataService.Batch.IntuitBatchItemResponses">
            <summary>
            Gets list of entites in case ResponseType is Report.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.DataService.Batch.Item(System.String)">
            <summary>
            Gets the <see cref="T:Intuit.Ipp.DataService.IntuitBatchResponse"/> with the specified id.
            </summary>
            <param name="id"> unique batchitem id. </param>
        </member>
        <member name="M:Intuit.Ipp.DataService.Batch.TryGetValue(System.String,Intuit.Ipp.DataService.IntuitBatchResponse@)">
            <summary>
            Tries to get the <see cref="T:Intuit.Ipp.DataService.IntuitBatchResponse"/> with the specified id
            </summary>
            <param name="id"> unique batchitem id. </param>
            <returns>True if the item was found, otherwise false</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Intuit.Ipp.DataService.Batch.Add(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Intuit.Ipp.DataService.Batch.Add(System.String,System.String,System.Collections.Generic.List{System.String})" -->
        <!-- Badly formed XML comment ignored for member "M:Intuit.Ipp.DataService.Batch.Add(Intuit.Ipp.Data.CDCQuery,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Intuit.Ipp.DataService.Batch.Add(Intuit.Ipp.Data.CDCQuery,System.String,System.Collections.Generic.List{System.String})" -->
        <member name="M:Intuit.Ipp.DataService.Batch.Add(Intuit.Ipp.Data.IEntity,System.String,Intuit.Ipp.Data.OperationEnum)">
            <summary>
            Adds the specified entity operation.
            </summary>
            <param name="entity">entitiy for the batch operation.</param>
            <param name="id">Unique batchitem id</param>
            <param name="operation">operation to be performed for the entity.</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.Batch.Add(Intuit.Ipp.Data.IEntity,System.String,Intuit.Ipp.Data.OperationEnum,System.Collections.Generic.List{System.String})">
            <summary>
            Adds the specified entity operation.
            </summary>
            <param name="entity">entitiy for the batch operation.</param>
            <param name="id">Unique batchitem id</param>
            <param name="operation">operation to be performed for the entity.</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.Batch.Remove(System.String)">
            <summary>
             Removes batchitem with the specified batchitem id.
            </summary>
            <param name="id"> unique batchitem id</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.Batch.RemoveAll">
            <summary>
            Remove all the batchitem requests.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.DataService.Batch.Execute">
            <summary>
            This method executes the batch request.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.DataService.Batch.ExecuteAsync">
            <summary>
            This method executes the batch request Asynchronously. 
            </summary>
        </member>
        <member name="M:Intuit.Ipp.DataService.Batch.IterateFaultAndPrepareException(Intuit.Ipp.Data.Fault)">
            <summary>
            Prepare IdsException out of Fault object.
            </summary>
            <param name="fault">Fault object.</param>
            <returns> returns IdsException object.</returns>
        </member>
        <member name="M:Intuit.Ipp.DataService.Batch.ProcessBatchItemResponse(Intuit.Ipp.Data.BatchItemResponse)">
            <summary>
            process batch item response
            </summary>
            <param name="batchitemResponse">The batchitem response.</param>
            <returns> returns IntuitBatchResponse object.</returns>
        </member>
        <member name="M:Intuit.Ipp.DataService.Batch.BatchAsyncompleted(System.Object,Intuit.Ipp.Core.AsyncCallCompletedEventArgs)">
            <summary>
            call back method for asynchronous batch execution. 
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The <see cref="T:Intuit.Ipp.Core.AsyncCallCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Intuit.Ipp.DataService.BatchExecutionCompletedEventArgs">
            <summary>
            Contains events for call back methods and corresponding fields
            </summary>
        </member>
        <member name="M:Intuit.Ipp.DataService.BatchExecutionCompletedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.DataService.BatchExecutionCompletedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.DataService.BatchExecutionCompletedEventArgs.Batch">
            <summary>
            Gets or sets the batch.
            </summary>
            <value>
            The batch.
            </value>
        </member>
        <member name="P:Intuit.Ipp.DataService.BatchExecutionCompletedEventArgs.Error">
            <summary>
            Gets or sets the error.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.DataService.BatchProcessingCallback">
            <summary>
            Contains event handler for call back event.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.DataService.BatchProcessingCallback.BatchExecutionCompletedEventHandler">
            <summary>
            event handler to handle call back for batch exceution completion
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="eventArgs">The <see cref="T:Intuit.Ipp.DataService.BatchExecutionCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Intuit.Ipp.DataService.DataService">
            <summary>
            This class file contains DataService performs CRUD operations on V3 QuickBooks APIs.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.DataService.DataService.serviceContext">
            <summary>
            The Service context object.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.DataService.DataService.restHandler">
            <summary>
            Rest Request Handler.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.#ctor(Intuit.Ipp.Core.ServiceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.DataService.DataService"/> class.
            </summary>
            <param name="serviceContext">IPP Service Context</param>
        </member>
        <member name="P:Intuit.Ipp.DataService.DataService.OnFindAllAsyncCompleted">
            <summary>
            Gets or sets the call back event for find all method in asynchronous call.
            </summary>
            <value>
            The OnFindAllCompleted call back.
            </value>
        </member>
        <member name="P:Intuit.Ipp.DataService.DataService.OnAddAsyncCompleted">
            <summary>
            Gets or sets the call back event for Add method in asynchronous call.
            </summary>
            <value>
            The OnAddAsyncCompleted call back.
            </value>
        </member>
        <member name="P:Intuit.Ipp.DataService.DataService.OnFindByIdAsyncCompleted">
            <summary>
            Gets or sets the call back event for FindByid method in asynchronous call.
            </summary>
            <value>
            The OnFindByIdAsyncCompleted call back.
            </value>
        </member>
        <member name="P:Intuit.Ipp.DataService.DataService.OnFindByLevelAsyncCompleted">
            <summary>
            Gets or sets the call back event for FindByLevel method in asynchronous call.
            </summary>
            <value>
            The OnFindByLevelAsyncCompleted call back.
            </value>
        </member>
        <member name="P:Intuit.Ipp.DataService.DataService.OnFindByParentIdAsyncCompleted">
            <summary>
            Gets or sets the call back event for FindByParentId method in asynchronous call.
            </summary>
            /// <value>
            The OnFindByParentIdAsyncCompleted call back.
            </value>
        </member>
        <member name="P:Intuit.Ipp.DataService.DataService.OnGetPdfAsyncCompleted">
            <summary>
            Gets or sets the call back event for GetPdf method in asynchronous call.
            </summary>
            <value>
            The OnGetPdfAsyncCompleted call back.
            </value>
        </member>
        <member name="P:Intuit.Ipp.DataService.DataService.OnSendEmailAsyncCompleted">
            <summary>
            Gets or sets the call back event for SendEmail method in asynchronous call.
            </summary>
            <value>
            The OnSendEmailAsyncCompleted call back.
            </value>
        </member>
        <member name="P:Intuit.Ipp.DataService.DataService.OnUpdateAsyncCompleted">
            <summary>
            Gets or sets the call back event for Update method in asynchronous call.
            </summary>
            <value>
            The OnUpdateAsyncCompleted call back.
            </value>
        </member>
        <member name="P:Intuit.Ipp.DataService.DataService.OnUpdateAccAsyncCompleted">
            <summary>
            Gets or sets the call back event for Update account method in asynchronous call.
            </summary>
            <value>
            The OnUpdateAccAsyncCompleted call back.
            </value>
        </member>
        <member name="P:Intuit.Ipp.DataService.DataService.OnDoNotUpdateAccAsyncCompleted">
            <summary>
            Gets or sets the call back event for Update account method in asynchronous call.
            </summary>
            <value>
            The OnDoNotUpdateAccAsyncCompleted call back.
            </value>
        </member>
        <member name="P:Intuit.Ipp.DataService.DataService.OnDeleteAsyncCompleted">
            <summary>
            Gets or sets the call back event for Delete method in asynchronous call.
            </summary>
            <value>
            The OnDeleteAsyncCompleted call back.
            </value>
        </member>
        <member name="P:Intuit.Ipp.DataService.DataService.OnVoidAsyncCompleted">
            <summary>
            Gets or sets the call back event for Delete method in asynchronous call.
            </summary>
            <value>
            The OnDeleteAsyncCompleted call back.
            </value>
        </member>
        <member name="P:Intuit.Ipp.DataService.DataService.OnRevertAsyncCompleted">
            <summary>
            Gets or sets the call back event for Revert method in asynchronous call.
            </summary>
            <value>
            The OnRevertAsyncCompleted call back.
            </value>
        </member>
        <member name="P:Intuit.Ipp.DataService.DataService.OnCDCAsyncCompleted">
            <summary>
            Gets or sets the call back event for CDC method in asynchronous call.
            </summary>
            <value>
            The OnCDCCompleted call back.
            </value>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.Add``1(``0)">
            <summary>
            Adds an entity under the specified realm. The realm must be set in the context.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Entity to Add.</param>
            <returns>Returns an updated version of the entity with updated identifier and sync token.</returns>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.Delete``1(``0)">
            <summary>
            Deletes an entity under the specified realm. The realm must be set in the context.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Entity to Delete.</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.Void``1(``0)">
            <summary>
            Voids an entity under the specified realm. The realm must be set in the context.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Entity to Void (only entities of type Sales Receipt and Payment are supported to be voided)</param>
            <returns name="T">Returns the voided entity</returns>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.Update``1(``0)">
            <summary>
            Updates an entity under the specified realm. The realm must be set in the context.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Entity to Update.</param>
            <returns>Returns an updated version of the entity with updated identifier and sync token.</returns>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.UpdateAccountOnTxns``1(``0)">
            <summary>
            updateaccountontxns an entity under the specified realm. The realm must be set in the context.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Entity to Update.</param>
            <returns>Returns an updated version of the entity with updated identifier and sync token.</returns>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.DoNotUpdateAccountOnTxns``1(``0)">
            <summary>
            donotupdateaccountontxns an entity under the specified realm. The realm must be set in the context.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Entity to Update.</param>
            <returns>Returns an updated version of the entity with updated identifier and sync token.</returns>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.GetPdf``1(``0)">
            <summary>
            Returns an entity as pdf bytes.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Entity to be returned as pdf bytes (entities of type Sales Receipt, Invoice and Estimate are supported to be returned as pdf).</param>
            <returns type="byte[]">Returns pdf as bytes</returns>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.SendEmail``1(``0,System.String)">
            <summary>
            Call the synchronous methods to send entity of type T in an email.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Instance of entity to be  sent in an email. This is not the actual entity that will be emailed. This entity needs to be present on server and the entity on the server will be sent in an email.Any changes in the passed in entity must be committed to the server in order for it to reflect in the email. Entities of type Sales Receipt, Invoice and Estimate are supported to be sent in an email as pdf</param>
            <param name="sendToEmail">Optional parameter to specify an email address</param>
            <returns name="T">Retruns the entity sent in email</returns>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.ProcessSendToEmail(System.String)">
            <summary>
            Checks if email address is valid
            </summary>
            <param name="sendToEmail">email address</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.IsValidEmailAddress(System.String)">
            <summary>
            Validates email address through Regex 
            </summary>
            <param name="sendToEmail">email address</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.FindById``1(``0)">
            <summary>
            Returns an entity under the specified realm. The realm must be set in the context.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity"> Entity type to Find.</param>    
            <returns> Returns an entity of specified Id.</returns> 
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.FindByParentId``1(``0)">
            <summary>
            Returns entities by the Parent Id specified, supported for TaxClassification only.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.FindByLevel``1(``0)">
            <summary>
            Returns entities by the Level specified, supported for TaxClassification only.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.FindAll``1(``0,System.Int32,System.Int32)">
            <summary>
            Returns a list of all entities of type T under the specified realm. The realm must be set in the context.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">The entity for which the data is required.</param>
            <param name="startPosition">The start position to retrieve.</param>
            <param name="maxResults">Maximum no. of results to retrieve</param>
            <returns> Returns the list of entities.</returns>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.CreateNewBatch">
            <summary>
            Creates new batch
            </summary>
            <returns> returns the batch object</returns>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.CDC(System.Collections.Generic.List{Intuit.Ipp.Data.IEntity},System.DateTime)">
            <summary>
            Returns List of entities changed after certain time.
            </summary>
            <param name="entityList"> List of entity.</param>    
            <param name="changedSince"> DateTime of timespan after which entities were changed.</param>    
            <returns> Returns an IntuitCDCResponse.</returns> 
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.FindAllAsync``1(``0,System.Int32,System.Int32)">
            <summary>
            Retrieves specified entity based passed page number and page size
            </summary>
            <typeparam name="T">Entity to be retrieved</typeparam>
            <param name="entity">Instance of entity to be retrieved</param>
            <param name="startPosition">The start position.</param>
            <param name="maxResults">The max results.</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.FindByLevelAsync``1(``0)">
            <summary>
            Retrieves specified entities based on passed Level, supported for TaxClassification only.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.FindByParentIdAsync``1(``0)">
            <summary>
            Retrieves specified entities based on passed ParentId, supported for TaxClassification only.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.FindByIdAsync``1(``0)">
            <summary>
            Call the Asynchronous methods to get a particular entity details.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Instance of entity to find</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.GetPdfAsync``1(``0)">
            <summary>
            Call the Asynchronous methods to get a particular entity as pdf.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Entity to be returned as pdf bytes (entities of type Sales Receipt, Invoice and Estimate are supported to be returned as pdf).</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.SendEmailAsync``1(``0,System.String)">
            <summary>
            Call the Asynchronous methods to send entity of type T in an email.
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Instance of entity to be  sent in an email. This is not the actual entity that will be emailed. This entity needs to be present on server and the entity on the server will be sent in an email.Any changes in the passed in entity must be committed to the server in order for it to reflect in the email. Entities of type Sales Receipt, Invoice and Estimate are supported to be sent in an email as pdf</param>
            <param name="sendToEmail">Optional parameter to specify an email address</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.CheckForPdfAllowedEntities(Intuit.Ipp.Data.IEntity)">
            <summary>
            Checks for PDF allowed entities
            </summary>
            <param name="entity">Entity to check</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.CheckForVoidAllowedEntities(Intuit.Ipp.Data.IEntity)">
            <summary>
            Checks for void allowed entities
            </summary>
            <param name="entity">Entity to check</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.CDCAsync(System.Collections.Generic.List{Intuit.Ipp.Data.IEntity},System.DateTime)">
            <summary>
            Retrieves entities changed since particular Date
            </summary>
            <param name="entityList">List of entities to be retrieved</param>
            <param name="changedSince">date after which entities changed.</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.AddAsync``1(``0)">
            <summary>
            Adds specified new entity
            </summary>
            <typeparam name="T">Entity to be added</typeparam>
            <param name="entity">Instance of entity to be added</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.DeleteAsync``1(``0)">
            <summary>
            Deletes an entity under the specified realm. The realm must be set in the context
            </summary>
            <typeparam name="T">Generic Type T.</typeparam>
            <param name="entity">Instance of entity to Delete</param>
        </member>
        <member name="M:Intuit.Ipp.DataService.DataService.Vo